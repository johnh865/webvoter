# Generated by Django 3.1.6 on 2021-03-05 18:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import vote.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('etype', models.CharField(choices=[('plurality', 'First Past the Post'), ('irv', 'Instant Runoff'), ('irv_stv', 'Single Transferable Vote // Hare'), ('stv_gregory', 'Single Transferable Vote // Gregory'), ('ranked_pairs', 'Ranked Pairs'), ('smith_minimax', 'Smith//Minimax'), ('borda', 'Borda'), ('top_two', 'Top Two Automatic Runoff'), ('copeland', 'Copeland'), ('black', 'Black'), ('score', 'Score'), ('star', 'STAR (Score then Automatic Runoff)'), ('smith_score', 'Smith//Score'), ('maj_judge', 'Majority Judgment'), ('rrv', 'Reweighted Range'), ('seq_monroe', 'Sequential Monroe')], max_length=20, verbose_name='Election method')),
                ('ballot_type', models.SmallIntegerField(choices=[(0, 'single'), (1, 'score'), (2, 'rank'), (3, 'approval')], verbose_name='Ballot type')),
                ('num_winners', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(29), django.core.validators.MinValueValidator(1)], verbose_name='# of winners')),
                ('num_candidates', models.PositiveSmallIntegerField(default=2, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(1)], verbose_name='# of candidates')),
                ('description', models.CharField(max_length=200, verbose_name='Poll question')),
                ('date_published', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.election')),
                ('user', models.ForeignKey(on_delete=models.SET(vote.models.get_default_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VoteBallot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vote', models.BooleanField(verbose_name='Candidate vote marking')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.candidate')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.election')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.voter')),
            ],
        ),
        migrations.CreateModel(
            name='RankBallot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vote', models.IntegerField(verbose_name='Candidate ranking')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.candidate')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.election')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.voter')),
            ],
        ),
        migrations.AddField(
            model_name='candidate',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.election'),
        ),
    ]
